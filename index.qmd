---
title: "Chemical-Level Modeling of Greenhouse Gas(GHG) Emissions in Electronics Manufacturing: An Empirical Analysis Using Facility-Reported EPA Data"
format: html
execute:
  echo: false
---


In the era of swift technological progress, the environmental impacts of electronics production have become increasingly significant. This research provides a comprehensive, data-driven examination of greenhouse gas emissions at the molecular level inside the electronics manufacturing sector. I performed a systematic analysis of individual fluorinated greenhouse gas (GHG) emissions across diverse chemicals, sites, and years utilizing facility-reported data from the US Environmental Protection Agency (EPA). The analysis identified the predominant chemical species and highlighted significant facility-level and temporal trends in the industry by focusing on reported emissions in metric tons. A limited number of chemicals contribute disproportionately to total emissions, as indicated by exploratory data analysis, whereas annual patterns reveal variability associated with facility operations and manufacturing cycles.



```{r}
#| label: setup
#| message: false
library(readxl)
library(dplyr)
library(ggplot2)
library(xml2)
```


```{r}
#| include: false
raw_chem_data <- read_excel("l_o_freq_request_data.xlsx", sheet = "Emissions from P&T Proc by Chem")
head(raw_chem_data, 5)
colnames(raw_chem_data)

```


```{r}
#| include: false
chem_data <- raw_chem_data %>%
  filter(!is.na(`Fluorinated GHG Name`), !is.na(`Fluorinated GHG Emissions (metric tons)`)) %>%
  rename(
    year = `Reporting Year`,
    facility_id = `Facility ID`,
    facility_name = `Facility Name`,
    chemical_name = `Fluorinated GHG Name`,
    chemical_formula = `Chemical Formula`,
    emissions_mt = `Fluorinated GHG Emissions (metric tons)`
  )
head(chem_data, 5)
summary(chem_data$emissions_mt)

```


```{r}
#| include: false
summary(chem_data$emissions_mt)
```

```{r}
#| include: false

top_chemicals <- chem_data %>%
  group_by(chemical_name) %>%
  summarize(total_mt = sum(emissions_mt, na.rm = TRUE)) %>%
  arrange(desc(total_mt)) %>%
  slice(1:10)

top_chemicals
```

```{r}
# Bar plot: Top 10 chemicals by total emissions
ggplot(top_chemicals, aes(x = reorder(chemical_name, total_mt), y = total_mt)) +
  geom_col(fill = "steelblue") +
  coord_flip() +
  labs(title = "Top 10 Chemicals by Total Emissions (Metric Tons)",
       x = "Chemical Name", y = "Total Emissions (Metric Tons)") +
  theme_minimal()

```


```{r}
#| label: yearly-trend
#| echo: false
#| fig-cap: "Total Chemical Emissions by Year"
yearly_trend <- chem_data %>%
  group_by(year) %>%
  summarize(total_emissions = sum(emissions_mt, na.rm = TRUE))

ggplot(yearly_trend, aes(x = as.factor(year), y = total_emissions)) +
  geom_col(fill = "darkgreen") +
  labs(title = "Total Chemical Emissions by Year",
       x = "Year", y = "Total Emissions (Metric Tons)") +
  theme_minimal()

```


```{r}
#| label: distribution
#| echo: false
#| fig-cap: "Distribution of Chemical Emissions"
ggplot(chem_data, aes(x = emissions_mt)) +
  geom_histogram(bins = 40, fill = "purple", color = "white") +
  labs(title = "Distribution of Chemical Emissions (Metric Tons)",
       x = "Emissions (Metric Tons)", y = "Count") +
  theme_minimal()

```


```{r}
#| label: model-prep
#| include: false
# Ensure predictors are factors
chem_data$chemical_name <- as.factor(chem_data$chemical_name)
chem_data$facility_name <- as.factor(chem_data$facility_name)
chem_data$year <- as.factor(chem_data$year)

# Log-transform emissions (handle skewness)
chem_data$log_emissions <- log1p(chem_data$emissions_mt)

#| label: model-fit
#| echo: false
#| output: true
# Fit the model
model <- lm(log_emissions ~ chemical_name + facility_name + year, data = chem_data)
summary(model)

```


```{r}
#| label: model-eval
#| echo: false
#| fig-cap: "Actual vs Predicted Emissions"
chem_data$predicted_log <- predict(model, newdata = chem_data)
chem_data$predicted_mt <- expm1(chem_data$predicted_log)
rmse <- sqrt(mean((chem_data$emissions_mt - chem_data$predicted_mt)^2, na.rm = TRUE))
cat("RMSE:", rmse, "\n")

ggplot(chem_data, aes(x = emissions_mt, y = predicted_mt)) +
  geom_point(alpha = 0.5, color = "blue") +
  geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
  labs(title = "Actual vs Predicted Emissions (Metric Tons)",
       x = "Actual Emissions (Metric Tons)",
       y = "Predicted Emissions (Metric Tons)") +
  theme_minimal()

```


```{r}
#| label: model-coefs
#| echo: false
#| output: true
# Coefficients table
#coef(summary(model))

# Check most influential chemicals/facilities
#sort(abs(coef(model)), decreasing = TRUE)[1:10]

```
